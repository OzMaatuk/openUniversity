#BlueJ class context
comment0.params=
comment0.target=RGBImage()
comment0.text=\r\n\ Empty\ constructor\ -\ make\ an\ zero\ on\ zero\ array\ of\ nothing.\r\n
comment1.params=rows\ cols
comment1.target=RGBImage(int,\ int)
comment1.text=\r\n\ Black\ _imageture\ constructor\ -\ get\ number\ of\ rows\ and\ cols\ and\ make\ a\ black\ sized\ _imageture\r\n\ \r\n\ @param\ rows\ The\ number\ of\ rows\ in\ the\ _imageture\r\n\ @param\ cols\ The\ number\ of\ cols\ in\ the\ _imageture\r\n
comment10.params=
comment10.target=void\ flipVertical()
comment10.text=\r\n\ void\ flipVertical\ (\ )\ -\ flip\ the\ _imageture\ on\ his\ vertical\ axis.\ \r\n
comment11.params=
comment11.target=void\ invertColors()
comment11.text=\r\n\ void\ invertColors(\ )\ -\ invert\ the\ colors\ of\ the\ _imageture,\ pixel\ by\ pixel.\r\n
comment12.params=
comment12.target=void\ rotateClockwise()
comment12.text=\r\n\ void\ rotateClockwise\ (\ )\ -\ rotate\ the\ _imageture\ clockwise.\r\n
comment13.params=
comment13.target=void\ rotateCounterClockwise()
comment13.text=\r\n\ void\ rotateCounterClockwise\ (\ )\ -\ rotate\ the\ _imageture\ counterclockwise.\r\n
comment14.params=offset
comment14.target=void\ shiftCol(int)
comment14.text=\r\n\ void\ shiftCol\ (int\ offset)\ -\ move\ the\ _imageture\ offset\ cols\ to\ the\ right,\ paint\ black\ the\ cols\ that\ been\ moved.\ \r\n\ \r\n\ @param\ \ integer\ offset\ -\ the\ nuber\ of\ cols\ to\ move\ the\ _imageture.\r\n
comment15.params=offset
comment15.target=void\ shiftRow(int)
comment15.text=\r\n\ void\ shiftRows\ (int\ offset)\ -\ move\ the\ _imageture\ offset\ rows\ down,\ paint\ black\ the\ rows\ that\ been\ moved.\ \r\n\ \r\n\ @param\ \ integer\ offset\ -\ the\ nuber\ of\ rows\ to\ move\ the\ _imageture.\r\n
comment16.params=
comment16.target=double[][]\ toGrayscaleArray()
comment16.text=\r\n\ double[][]\ toGrayscaleArray\ (\ )\ -\ change\ _imageture\ color\ to\ grayscale.\r\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\r\n\ String\ toString()\ -\ prints\ the\ pivture\ pixels\ by\ string\ in\ (red,\ green,\ blue)\ format.\r\n\ \r\n\ @return\ a\ table\ of\ the\ pixels\ colors.\r\n
comment18.params=
comment18.target=RGBColor[][]\ toRGBColorArray()
comment18.text=\r\n\ toRGBColorArray()\ -\ Convert\ a\ _imageture\ (RGBImage)\ to\ a\ two\ demintion\ array\ of\ pixels\ (RGBColor).\r\n\ \r\n\ @return\ RGBColor[][]\ two\ demintion\ array\ of\ RGBColor\ (pixels)\r\n
comment2.params=pixels
comment2.target=RGBImage(RGBColor[][])
comment2.text=\r\n\ Copy\ pixels\ constructor\ -\ get\ an\ two\ dimension\ array\ of\ pixels\ (RGBColor)\ and\ copy\ them\ to\ the\ _imageture.\r\n\ \r\n\ @param\ pixels\ Two\ demintion\ array\ of\ pixels\ (RGBColor).\r\n
comment3.params=other
comment3.target=RGBImage(RGBImage)
comment3.text=\r\n\ Copy\ constructor\ -\ get\ a\ RGBImage\ Object\ and\ copy\ it\r\n\ \r\n\ @param\ other\ RGBColor\ object\ (_imageture).\r\n
comment4.params=
comment4.target=int\ getHeight()
comment4.text=\r\n\ int\ getHeight\ (\ )\ -\ returns\ the\ number\ of\ rows\ in\ the\ _imageture.\r\n\ \r\n\ @return\ integer\ _image.length\ -\ number\ of\ rows\ in\ the\ _imageture\ (RGBImage\ object).\r\n
comment5.params=
comment5.target=int\ getWidth()
comment5.text=\r\n\ int\ getWidth\ (\ )\ -\ returns\ the\ number\ of\ cols\ in\ the\ _imageture.\r\n\ \r\n\ @return\ integer\ _image[0].length\ -\ number\ of\ cols\ in\ the\ _imageture\ (RGBImage\ object).\r\n
comment6.params=row\ col
comment6.target=RGBColor\ getPixel(int,\ int)
comment6.text=\r\n\ RGBColor\ getPixel\ (int\ row,\ int\ col)\ -\ returns\ the\ pixel\ (RGBColor)\ in\ the\ rows/cols\ place.\r\n\ \r\n\ @param\ integer\ rows\ -\ the\ row\ number\ of\ the\ pixel\ that\ been\ asked.\r\n\ @param\ integer\ cols\ -\ the\ col\ number\ of\ the\ pixel\ that\ been\ asked.\r\n\ @return\ RGBColor\ object\ of\ the\ asked\ pixel.\r\n
comment7.params=row\ col\ pixel
comment7.target=void\ setPixel(int,\ int,\ RGBColor)
comment7.text=\r\n\ void\ setPixel\ (int\ row,\ int\ col,\ RGBColor\ pixel)\ -\ replace\ currect\ row/col\ pixel\ with\ a\ new\ one.\r\n\ \r\n\ @param\ integer\ row\ the\ row\ number\ of\ the\ pixel\ to\ be\ replaced.\r\n\ @param\ integer\ col\ the\ col\ number\ of\ the\ pixel\ to\ be\ replaced.\r\n\ @param\ RGBColor\ object\ pixel\ the\ new\ pixel.\r\n
comment8.params=other
comment8.target=boolean\ equals(RGBImage)
comment8.text=\r\n\ boolean\ equals\ (RGBImage\ other)\ -\ check\ if\ the\ _imageture\ is\ the\ same\ as\ the\ other\ _imageture.\r\n\ \r\n\ @param\ RGBImage\ other\ is\ the\ other\ _imageture.\r\n\ @return\ boolean\ value\ of\ true\ if\ same,\ and\ false\ if\ not.\r\n
comment9.params=
comment9.target=void\ flipHorizontal()
comment9.text=\r\n\ void\ flipHorizontal\ (\ )\ -\ flip\ the\ _imageture\ on\ his\ horizontal\ axis.\r\n
numComments=19
