#BlueJ class context
comment0.params=
comment0.target=Polygon()
comment0.text=\r\n\ empty\ constracture\:\r\n\ public\ Polygon()\ -\ sets\ the\ head\ to\ null.\r\n\ \r\n\ @Time\:\ \ \ O(1);\r\n\ @Place\:\ \ O(1);\r\n
comment1.params=p\ pos
comment1.target=boolean\ addVertex(Point,\ int)
comment1.text=\r\n\ public\ boolean\ addVertex(Point\ p,\ int\ pos)\ -\ gets\ Point\ (p)\ and\ a\ integer\ Position\ (pos)\ to\ add\ the\ Point\ to\ the\ Polygon\ at\ that\ position.\r\n\ \r\n\ @param\ \ \ p\ -\ the\ point\ to\ add.\r\n\ @param\ \ \ pos\ -\ the\ position\ to\ add\ at.\r\n\ @return\ \ true\ if\ the\ process\ succeed,\r\n\ \ \ \ \ \ \ \ \ \ false\ if\ not.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(1);\r\n
comment10.params=other
comment10.target=boolean\ isBigger(Polygon)
comment10.text=\r\n\ public\ boolean\ isBigger(Polygon\ other)\ -\ gets\ an\ other\ Polygon\ (other)\ and\ check\ if\ it\ got\ smaller\ area\ then\ this\ Polygon.\r\n\ \r\n\ @param\ \ \ other\ -\ the\ other\ Polygone\ to\ compare\ to.\r\n\ @return\ \ true\ if\ the\ other\ Polygone\ has\ a\ smaller\ area\ then\ this\ Polygon.\r\n\ \ \ \ \ \ \ \ \ \ false\ if\ not.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\r\n
comment11.params=p
comment11.target=int\ findVertex(Point)
comment11.text=\r\n\ public\ int\ findVertex(Point\ p)\ -\ gets\ a\ point\ and\ search\ it\ on\ the\ Polygon\r\n\ \r\n\ @param\ \ \ p\ -\ the\ point\ we\ need\ to\ search\ for.\r\n\ @return\ \ the\ place\ of\ the\ point\ in\ the\ Polygine.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\ -\ becouse\ of\ the\ getPoint\ in\ the\ while;\r\n
comment12.params=p
comment12.target=Point\ getNextVertex(Point)
comment12.text=\r\n\ public\ Point\ getNextVertex(Point\ p)\ -\ gets\ a\ Point,\ search\ it\ on\ the\ Polygon,\ returns\ the\ next\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @param\ \ \ p\ -\ the\ Point\ we\ need\ to\ search.\r\n\ @return\ \ the\ Point\ after\ p.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\r\n
comment13.params=
comment13.target=Polygon\ getBoundingBox()
comment13.text=\r\n\ public\ Polygon\ getBoundingBox()\ -\ returns\ the\ corresponding\ rectangle\ blocks\ delegates\ The\ polygon.\r\n\ \r\n\ @return\ \ the\ corresponding\ rectangle\ blocks\ delegates\ The\ polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\r\n
comment2.params=
comment2.target=Point\ highestVertex()
comment2.text=\r\n\ public\ Point\ highestVertex()\ -\ returns\ the\ highest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @return\ \ the\ highest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\ -\ getPoint\ creats\ a\ new\ every\ loop...\r\n
comment3.params=
comment3.target=Point\ lowestVertex()
comment3.text=\r\n\ private\ Point\ lowestVertex()\ -\ returns\ the\ lowest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @return\ \ the\ lowest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\ -\ getPoint\ creats\ a\ new\ every\ loop...\r\n
comment4.params=
comment4.target=Point\ leftestVertex()
comment4.text=\r\n\ private\ Point\ leftestVertex()\ -\ returns\ the\ leftest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @return\ \ the\ leftest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\ -\ getPoint\ creats\ a\ new\ every\ loop...\r\n
comment5.params=
comment5.target=Point\ rightestVertex()
comment5.text=\r\n\ private\ Point\ rightestVertex()\ -\ returns\ the\ rightest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @return\ \ the\ rightest\ Point\ at\ the\ Polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\ -\ getPoint\ creats\ a\ new\ every\ loop...\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ public\ String\ toString()\ -\ returns\ the\ polygon\ vertices\ by\ a\ string.\r\n\ \r\n\ @return\ \ the\ polygon\ vertices\ by\ a\ string.\r\n\ \r\n\ @Time\:\ \ \ O(N);\ -\ or,\ depedents\ on\ the\ time\ that\ the\ string\ methods\ use,\ if\ its\ O(N)\ the\ this\ method\ is\ O(N^2).\r\n\ @Place\:\ \ O(1);\ -\ or,\ depedents\ on\ the\ place\ that\ the\ string\ methods\ use,\ if\ its\ O(N)\ the\ this\ method\ is\ O(N)\r\n
comment7.params=
comment7.target=double\ calcPerimeter()
comment7.text=\r\n\ public\ double\ calcPerimeter()\ -\ calculate\ the\ perimeter\ of\ the\ Polygon.\r\n\ \r\n\ @return\ \ the\ perimeter\ of\ the\ Polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\r\n
comment8.params=
comment8.target=double\ calcArea()
comment8.text=\r\n\ public\ double\ calcArea()\ -\ calculate\ the\ area\ of\ the\ Polygon.\r\n\ \r\n\ @return\ \ the\ area\ of\ the\ Polygon.\r\n\ \r\n\ @Time\:\ \ \ O(N);\r\n\ @Place\:\ \ O(N);\ -\ becouse\ of\ the\ getPoint\ at\ the\ heron\ method;\r\n
comment9.params=Point1\ Point2\ Point3
comment9.target=double\ heron(PointNode,\ PointNode,\ PointNode)
comment9.text=\r\n\ private\ double\ heron(PointNode\ Point1,\ PointNode\ Point2,\ PointNode\ Point3)\ -\ calculate\ the\ area\ of\ the\ tryangle\ thats\ the\ three\ points\ make\ by\ heron.\r\n\ \r\n\ @return\ \ the\ area\ of\ the\ tryangle.\r\n\ \r\n\ @Time\:\ \ \ O(1);\ -\ its\ acctually\ the\ O(Math.sqrt());\r\n\ @Place\:\ \ O(1);\ -\ its\ acctually\ the\ O(Math.sqrt());\r\n
numComments=14
